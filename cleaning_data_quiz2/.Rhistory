install.packages("RMySQL")
install.packages("sqldf")
?unz
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
data <- read.csv(unz(temp, "household_power_consumption.txt"), sep=";")
unlink(temp)
## Converting the date column to Date class:
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
## Subsetting the data.frame to only include the desired dates:
data <- data[data$Date >= as.Date("2007-02-01") & data$Date<=as.Date("2007-02-02"),]
data$DateTime <- strptime(paste(data$Date, data$Time), "%Y-%m-%d %H:%M:%S")
head(data)
?xyplot
library(lattis)
?library
library(lattice)
?xyplot
x <- rnorm(100)
y <- rnorm(100)
z <- xyplot(x, y)
z<- xyplog(x, x)
z<- xyplot(x, x)
require(stats)
z< - xyplot(lat ~ long | Depth, data = quakes)
z<- xyplot(lat ~ long | Depth, data = quakes)
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
z<- xyplot(lat ~ long | Depth, data = quakes)
class(z)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?points
?lines
?axis
?panel.abline
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
z<- xyplot(lat ~ long | Depth, data = quakes)
z
?par
?print.trellis
?splom
?trellis.par.set
?ggplot2
library(ggplot2)
load.libraries("ggplot2")
library("ggplot2")
load.packages("ggplot2")
install.packages("ggplot2")
load.library(ggplot2)
load.libraries(ggplot2)
library(ggplot2)
?ggplot2
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
?qplot
?geom_smooth
qplot(votes, rating, data = movies) + geom_smooth()
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?lpoints
?text
?axis
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?llines
url<-"genome.ucsc.edu"
library(RMySQL)
install.packages("RMySQL")
install.packages("RMySQL", type="source")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("exmple.h5")
created
created = h5createFile("exmple.h5", "foo")
created = h5createFile("exmple.h5", "baa")
created = h5createFile("exmple.h5", "foo/foobaa")
h5ls("example.h5")
h5ls("exmple.h5")
list(1:3,1)
list(1:3)
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
head(htmlCode,20)
head(htmlCode,21)
htmlCode[1:10]
library(XML)
install.packages("XML")
library(XML)
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply, html, "//title", xmlValue)
xpathSApply() html, "//title", xmlValue)
xpathSApply(html, "//title", xmlValue)
library(httr)
?content
?jsonLite
?jsonlite
library(jsonlite)
?View
?rep
?download.file
getcwd()
lscwd()
setwd("~/sandbox/datasciencecoursera/cleaning_data_quiz3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", method="curl", destfile="2006_communities.csv")
d <- load.csv("2006_communities.csv")
?load.
?read.csv
d <- read.csv("2006_communities.csv")
class(d)
d[ d[ARC] == 3]
d[ d["ARC"] == 3]
d[ d["ARC"] == 3,]
d[,d["ARC"] == 3]
d['ARC']
d['ARC',]
d[,'ARC']
head(d)
d[,c("ACR")]
d[,"ACR"]
d[,"ACR"] == 3
d[d[,"ACR"] == 3]
d[,d[,"ACR"] == 3]
d[,d["ACR"] == 3]
d[,d$ARC=3]
d[,d$ARC==3]
head(d[,d$ARC==3])
d[[ARC]]
d[["ACR"]]
d[["ACR"]] == 3
d[d[["ACR"]] == 3]
d[,d[["ACR"]] == 3]
d[d[["ACR"]] == 3,]
head(d[d[["ACR"]] == 3,])
d[d[["ACR"]] == 3 && d[["AGS"]] == 6,]
d[["ACR"]] == 3 && d[["AGS"]] == 6
d[["ACR"]] == 3 & d[["AGS"]] == 6
d[,d[["ACR"]] == 3 & d[["AGS"]] == 6]
d[d[["ACR"]] == 3 & d[["AGS"]] == 6,]
agricultureLogical <- d[d[["ACR"]] == 3 & d[["AGS"]] == 6,]
which(agricultureLogical)
class(agricultureLogical)
agricultureLogical <- as.vector(d[d[["ACR"]] == 3 & d[["AGS"]] == 6,])
class(agricultureLogical)
agricultureLogical <- d[["ACR"]] == 3 & d[["AGS"]] == 6
class(agricultureLogical)
which(agricultureLogical)
?jpg
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="190_GDP.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="FEDSTATS_Country.csv", method="curl")
gdp <- read.csv("190_GDP.csv")
edu <- read.csv("FEDSTATS_Country.csv")
str(gdp)
str(edu)
str(edu$CountryCode)
str(gdp$X)
gdp$X %in% edu$CountryCode
sum(gdp$X %in% edu$CountryCode)
count(gdp$X %in% edu$CountryCode)
length(gdp$X %in% edu$CountryCode)
c<-gdp$X %in% edu$CountryCode
c[ c==FALSE]
length(c[ c==FALSE])
length(c)
330 - 106
gdp%X == edu%CountryCode
class(agricultureLogical)
sort(NO, decreasing=TRUE)
NO[order(NO$VAR), ]
summary(gdp)
quantile(gdp["High income: OECD"])
quantile(gdp["High income: OECD"],)
quantile(gsp[gdp["High income: OECD"],])
quantile(gdp[gdp["High income: OECD"],])
quantile(gdp[,gdp["High income: OECD"]])
quantile(gdp[,gdp["High income: OECD"]] na.rm=TRUE)
quantile(gdp[,gdp["High income: OECD"]], na.rm=TRUE)
table(gdp, useNA="ifany")
sum(is.na(gdp$X))
sum(is.na(edu$CountryCode))
names(gdp)
names(edu)
md = merge(gdp, edu, by.x="X", by.y="CountryCode", all=TRUE)
head(md, 3)
str(md)
md$CountryCode
md$X
is.na(md$X)
any(is.na(md$X)
any(is.na(md$X))
all(is.na(md$X))
sum(is.na(md$X))
intersect(names(edu), names(gdp))
?merge
md[ is.na(md) ]
md[, is.na(md) ]
md[is.na(md),]
gdp$CountryCode
edu$CountryCode
ec <- edu[,edu$CountryCode]
ec <- edu[edu$CountryCode],]
edu$CountryCode]
edu$CountryCode
edu[edu$CountryCode]
edu[edu$CountryCode,]
edu[,edu$CountryCode]
edu[edu$CountryCode]
edu[edu$CountryCode,]
str(edu)
install.packages("jpeg")
?read.jpeg
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="jeff.jpg", method="curl")
?readJPEG
library(jpeg)
?readJPEG
j <- readJPEG("jeff.jpg")
j <- readJPEG("jeff.jpg" native=TRUE)
j <- readJPEG("jeff.jpg", native=TRUE)
?quantile
quantil(j)
quantile(j)
quantile(j, probs=seq(30, 80))
quantile(j, probs=seq(.30, .80))
quantile(j, probs=seq(.80))
quantile(j, probs=c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1,NA)
)
?merge
str(gdp)
gdp$match <- match(gdp$X, edu$CountryCode, match=0)
gdp$match <- match(gdp$X, edu$CountryCode, nomatch=0)
nrow(gdp)
nrow(gdp[ gdp$match == 0])
nrow(gdp[ gdp$match == 0,])
330 - 106
gdp
str(gdp)
?read.csv
gdp <- read.csv("190_GDP.csv", skip=5, header=FALSE, col.names=c("Country", "Rank", "EMPTY", "Econmy", "US_M"))
gdp <- read.csv("190_GDP.csv", skip=5, header=FALSE, col.names=c("Country", "Rank", "EMPTY_1", "Econmy", "US_M", "EMPTY_2", "EMPTY_3", "EMPTY_4"))
gdp <- read.csv("190_GDP.csv", skip=5, header=FALSE, col.names=c("Country", "Rank", "EMPTY_1", "Econmy", "US_M", "EMPTY_2", "EMPTY_3", "EMPTY_4", "EMPTY_5"))
gdp <- read.csv("190_GDP.csv", skip=5, header=FALSE)
gdp
gdp <- read.csv("190_GDP.csv", skip=5, header=FALSE, nrows=190)
gdp
str(gdp)
head(gdp, 4)
colnames(gdp) <- c("CountryCode", "Rank", "NO1", "Economy", "USD_M", "NO2", "NO3", "NO4", "NO5", "NO6")
head(gdp, 4)
?subset
gdp2 <- subset(gdp, subset, select=c("CountryCode", "Rank", "Economy", "USD_M"))
gdp2 <- subset(gdp, select=c("CountryCode", "Rank", "Economy", "USD_M"))
head(gdp2, 3)
edu$CountryCode %in% gdp%CountryCode
gdp2$match <- match(gdp2$CountryCode, edu$CountryCode, nomatch=0)
sum(gdp2$match)
head(gdp2, 4)
?match
is.na(gdp2$match)
sum(is.na(dp2$match))
sum(is.na(gdp2$match))
gdp2[which(gdp2$match <= 0)]
gdp2[which(gdp2$match <= 0),]
edu[edu$CountryCode = "SSD"]
edu[edu$CountryCode = "SSD",]
edu[,edu$CountryCode = "SSD"]
edu[,edu$CountryCode == "SSD"]
edu[edu$CountryCode == "SSD",]
edu[which(edu$CountryCode == "SSD")]
edu[which(edu$CountryCode == "SSD"),]
edu[,which(edu$CountryCode == "SSD")]
edu$CountryCode =="SSD"
sum(edu$CountryCode =="SSD")
sum(gdp2$CountryCode == "SSD")
tail(sort(gdp$USD_M), 1)
sort(gdp$USD_M), 1)
sort(gdp$USD_M)
gdp2[sort(gdp2$USD_M)]
gdp2[sort(gdp2$USD_M),]
?sort
gdp2[sort(gdp2$USD_M,decreasting=TRUE),]
gdp2[sort(gdp2$USD_M,decreasting=FALSE),]
sort(gdp2$USD_M,decreasting=FALSE)
sort(gdp2$USD_M,decreasting=FALSE, na.last=TRUE)
gdp2[sort(gdp2$USD_M,decreasting=FALSE, na.last=TRUE)]
gdp2[sort(gdp2$USD_M,decreasting=FALSE, na.last=TRUE),]
head(tail(gdp2[sort(gdp2$USD_M,decreasting=FALSE, na.last=TRUE),], 13), 1)
?sort
gdp2[order(gdp2$USD_M), ]
gdp2$USD_M <- as.numeric(gdp2$USD_M)
gdp2[order(gdp2$USD_M), ]
gdp2[order(gdp2$Rank), ]
?order
gdp2[order(gdp2$Rank, decreasing=TRUE), ]
tail(gdp2[order(gdp2$Rank, decreasing=TRUE), ], 13)
head(tail(gdp2[order(gdp2$Rank, decreasing=TRUE), ], 13), 1)
head( edu[edu["Income Group"] == "High income: OECD",], 3)
head( edu[,edu["Income Group"] == "High income: OECD"], 3)
edu["Income Group"] == "High income: OECD"
edu[["Income Group"] == "High income: OECD"
edu[["Income Group"]] == "High income: OECD"
edu[["Income Group"]] = "High income: OECD"
gdp2
tail(head(gdp2, 13), 1)
tail(head(gdp2[order(gdp2$Rank)], 13), 1)
tail(head(gdp2[order(gdp2$Rank),], 13), 1)
tail(head(gdp2[order(gdp2$Rank, decreasing=FALSE),], 13), 1)
tail(head(gdp2[order(gdp2$Rank, decreasing=TRUE),], 13), 1)
?intersect
?match
?merge
names(edu)
edu2 <- subset(edu, select=c("CountryCode", "Income.Group")
)
head(edu2, 3)
"High income:" %in% edu2$Income.Group
edu2$Income.Group = "High income: nonOECD"
head(edu2, 3)
edu2 <- subset(edu, select=c("CountryCode", "Income.Group")
)
head(edu2, 3)
edu2$Income.Group == "High income: nonOECD"
edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD"]
edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD"]
edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD"
sum(edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD")
edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD"), "CounryCode"]
edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD", "CounryCode"]
edu2[,edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD"]
edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD",]
edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD",edu2$CountryCode]
edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD",]$CountrCode
edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD",][["CountryCode"]]
length(edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD",][["CountryCode"]])
edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD",][["CountryCode"]]
search<- edu2[edu2$Income.Group == "High income: nonOECD" | edu2$Income.Group == "High income: OECD",][["CountryCode"]]
class(search)
head(gdp2, 3)
gdp2[search]
gdp2[search,]
head(gdp3)
head(gdp2,3)
r <- gdp2[search,]
r
r[~is.na(r)]
r[!is.na(r),]
r[is.na(r),]
r
r[ complete.cases(r)]
r[ complete.cases(r),]
length(r[ complete.cases(r),])
nrows(r[ complete.cases(r),])
nrows(r[ complete.cases(r),]))
nrow(r[ complete.cases(r),])
average(r[ complete.cases(r),])
stats(r[ complete.cases(r),])
summary(r[ complete.cases(r),])
summary(r[ complete.cases(r),][['Rank']])
search2_nonOECD<- edu2[edu2$Income.Group == "High income: nonOECD",][["CountryCode"]]
search1_OECD<- edu2[edu2$Income.Group == "High income: OECD",][["CountryCode"]]
r1 <- gdp2[search1_OECD,]
r2 <- gdp2[search1_nonOECD,]
r2 <- gdp2[search2_nonOECD,]
stats(r1[ complete.cases(r1),])
summary(r1[ complete.cases(r1),])
summary(r1[ complete.cases(r1),][['Rank']])
summary(r2[ complete.cases(r2),][['Rank']])
cut
?cut
cut(gdp2$Rank, 3)
?table
table(.~cut(gdp2$Rank, 3))
table(gdp2 ~ cut(gdp2$Rank, 3))
table(gdp2, useNA="ifany")
table(gdp2$Ranking, useNA="ifany")
head(gdp2, 3)
table(gdp2$Rank, useNA="ifany")
table(gdp2$Rank ~ cut(gdp2$Rank, 3), useNA="ifany")
table(cut(gdp2$Rank, 3) ~ gdp2Rank, useNA="ifany")
?table
table(cut(gdp2$Rank, 3) . gdp2Rank, useNA="ifany")
table(cut(gdp2$Rank, 3) . gdp2$Rank, useNA="ifany")
table(cut(gdp2$Rank, 3) ~ gdp2$Rank, useNA="ifany")
table(cut(gdp2$Rank, 3), useNA="ifany")
?xtabs
cut(gdp2$Rank, 3)
?table
?cut
gdp2$Rank
table(cut(gdp$Rank, 3))
table(cut(gdp$Rank, 5))
?merge
edu2
head(gdp2, 3)
head(edu2, 3)
merge(gdp2, edu2, by="CountryCode", all.x=TRUE)
head(gdp2, 3)
gdp3 <- merge(gdp2, edu2, by="CountryCode", all.x=TRUE)
gdp3[ is.na(gdp3), ]
nrow(gdp2)
nrow(gdp3)
gdp3
is.na(gdp3)
sum(is.na(gdp3))
is.na(gdp3)
gdp3
gdp3 <- merge(gdp2, edu2, by="CountryCode")
is.na(gdp3)
sum(is.na(gdp3))
gdp3
gdp3$Income.Group == "High income: OECD"
summary(gdp3$Income.Group == "High income: OECD")
summary( gdp3[gdp3$Income.Group == "High income: OECD", ]
)
gdp3[gdp3$Income.Group == "High income: OECD", ]
summary(gdp3[gdp3$Income.Group == "High income: OECD", ])
summary(gdp3[gdp3$Income.Group == "High income: nonOECD", ])
cut(gdp3$Rank, 5)
class(cut(gdp3$Rank, 5))
?table
?levels
table(gdp3)[table(gdb3$Rank) <= 10]
table(gdp3$CountryCode)[table(gdb3$Rank) <= 10]
table(gdp3$CountryCode)[table(gdp3$Rank) <= 10]
table(gdp3$CountryCode)[table(gdp3$Rank) <= 1]
table(gdp3$CountryCode)
table(gdp3$CountryCode, cut(gdp3, 5))
table(gdp3$CountryCode, cut(gdp3$Rank, 5))
summary(table(gdp3$CountryCode, cut(gdp3$Rank, 5)))
nrow(table(gdp3$CountryCode, cut(gdp3$Rank, 5))
)
table(gdp3$CountryCode, cut(gdp3$Rank, 5)
)
table(gdp3$CountryCode ~ ., cut(gdp3$Rank, 5) )
table(. ~ gdp3$CountryCode, cut(gdp3$Rank, 5) )
summary(table(gdp3$CountryCode, cut(gdp3$Rank, 5) ))
str(table(gdp3$CountryCode, cut(gdp3$Rank, 5) ))
sum(table(gdp3$CountryCode, cut(gdp3$Rank, 5) ))
table(gdp3$CountryCode, cut(gdp3$Rank, 5) )
table(gdp3$Income.Group, cut(gdp3$Rank, 5) )
exit
