myplot(28)
z<-qnorm(.95)
pnorm(30+z, mean=30, lower.tail=FALSE)
pnorm(30+z, mean=32, lower.tail=FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail=FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail=FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type =
| "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2 , sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8, n=26, sd=1)$delta
power.t.test(power=.8, n=26, sd=1, type="one.sample", alt="one.sided")$delta
power.t.test(power=.8, n=27, sd=1, type="one.sample", alt="one.sided")$delta
head(pValues,2)
head(pValues)
sum( pValues > .05 )
sum( pValues <.05)
padjust(pValues, method="bonferroni")
p.adjut(pValues, method="bonferroni")
p.adjust(pValues, method="bonferroni")
sum(p.adjust(pValues, method="bonferroni") < 0.05)
sum(p.adjust(pValues, method="BH") < 0.05)
tail(trueStatus)
table(pValues2<-.05, trueStatus)
table(pValues2<.05, trueStatus)
?
help
swirl()
table(pValues<.05, trueStatus)
pValues
pValues2
table(pValues2<.05, trueStatus)
24/500
table(p.adjust(pValues2, method="bonferroni")<.05, trueStatus)
table(p.adjust(pValues2, method="BH")<.05, trueStatus)
3.5
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace=TRUE)
resam <- matrix(sam, B, nh)
meds <- apple(resam 1, median)
meds <- apple(resam, 1, median)
meds <- apply(resam, 1, median)
median(meds) - median(fh)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(.025, .975))
quantile(meds, c(.025, .975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
gropu
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1 perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group))
)
mean(perms>obs)
testStat(DEcounts, group)
perms <- sapply(1: 10000, function(i) testStat(DEcounts, sample(group)))
rm(list=ls())
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4 ~ parent, galton)
)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$Child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes, varEst)
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/ (n-2) )
summary(fit)$sigma
deviance(fit)/(n-2)
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- sum(deviance(fit$residuals)^2)
sRes <- sum(deviance(sTot)^2)
)
()
""
sRes <- deviance(fit)
1-(rRes/sTot)
1-(sRes/sTot)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, calton$parent)
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm( child ~ ones + parent - 1, galton )
lm( child ~ parent, galton )
lm(child ~1, galton)
View(trees)
fit<-lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2<-lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm( Fertility ~ ., swiss)
lm(Fertility ~ ., swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examinatin, swiss$Education)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- sum(swiss$Examination, swiss$Catholic)
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility~. + ec, swiss)
all$coeff - efit$coeff
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays,15)
sX
sA
summary(InsectSprays[,2])
sapply(class, InsectSprays[,])
sapply(InsectSprays[,], class)
sapply(InsectSprays, class)
fit <- lm(count ~ spray, InsectSprays)
summry(fiT$coef)
summary(fit$coef)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric~Year)
fit <- lm(Numeric~Year, hunger)
summary(fit)$coef
lm(Numeric ~ x[hunger$Sex =="Female"] + Year, hunger)
)
lm(Numeric ~ Year, hunger)
lmF <- lm(hunger$Numeric[Hunger$Sex == "Female"] ~ hunger$Year[hunger$Sex == "Female"])
lmF <- lm(hunger$Numeric[hunger$Sex == "Female"] ~ hunger$Year[hunger$Sex == "Female"])
lmM <- lm(hunger$Numeric[hunger$Sex == "Male"] ~ hunger$Year[hunger$Sex == "Male"])
lmBOth <- lm(Numeric ~ Year + Sex, hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
swirl()
library(swirl)
swirl()
fit <- lm(y~x, out2)
?plot
plot(fit, which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which=1)
coef(fitno) - coef(fit)
coef(fit) - coef(fitno)
View(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno,out2[1,])
1-redif(fit)[1]/resno
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- fit$sigma
sigma <- sqrt(deviance(fit)/df.residual(fit))
resid(fit)/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1] / ( sigma1 * sqrt(1-hatvalues(fit)[1]))
rstudent(fit)[1]
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2) / (2*sigma^2)
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., data=swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data=swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, data=swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data=swiss)
anova(fit1, fit3)
deviance(fit3)
d<-deviance(fit3)/43
(deviance(fit1)-deviance(fit3))/()
(deviance(fit1)-deviance(fit3))
n <- (deviance(fit1) - deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.text(fit3$residuals)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, family="binomial", data=ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6))
)
axp(loodds)/(1+exp(lodds))
exp(loodds)/(1+exp(lodds))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(.95, 1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, data=hits, family="poisson"
)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[which.max(hits[,'visits']),]
hits[704,]
lambda <- mdl$fitted.values[704]
qpoid(.95, lambda)
qpois(.95, lambda)
mdl2 <- glm(visits ~ simplystats, offset=log(visits+1), data=hits)
mdl2 <- glm(formulat = simplystats ~ date, family="poisson", offset=log(visits+1), data=hits)
mdl2 <- glm(formula = simplystats ~ date, family="poisson", offset=log(visits+1), data=hits)
qpois(.95, mdl2fitted.values[704])
qpois(.95, mdl2$fitted.values[704])
library(rcharts)
install.packages("rcharts")
require(devtools)
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
require(devtools)
install_github('ramnathv/rCharts@dev')
install.packages("base64enc")
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
library(rMaps)
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
install.packages("rjson")
library(rMaps)
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
ichoropleth(Crime ~ State, data = subset(violent_crime, Year == 2010))
ichoropleth(Crime ~ State, data = violent_crime, animate = "Year")
ichoropleth(Crime ~ State, data = violent_crime, animate = "Year", play = TRUE)
library(swirl)
swirl()
plot(child~parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child~parent, galton)
abline(regline, lwd=3, col="red")
abline(regrline, lwd=3, col="red")
summary(regrline)
fit <- lm(child~parent, data = galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic = fit$coef[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhl
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
con(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$mag)
voc(efit$residuals, attenu$dist)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- fit(gch_nor ~ gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit<-lm(child~parent, data=galton)
fit <- lm(child~parent, data=galton)
fit <- lm(child~parent, galton)
sqrt(sum(fit$residuals^2)/(n-2))
simmary(fit)$sigma
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance( galton$child)
sRes <- deviance()
()
)
sRes <- deviance( fit$residuals)
$
[]
?
help
sRes <- mean(0)
sRes <- deviance(fit$residuals)
sRes <- deviance(fit)
1 - (sRes/sTot)
1 -sRes/sTot
summary(fit)$r.squared
summary(fit)
cor(galton$parent,galton$child)^2
ones<- rep(1, nrow(galton))
lm(child~ones + parent - 1, galton)
lm(child~parent, galton)
lm(child~1, galton)
head(trees)
fit<-lm(Volumne ~ Girth + Height + Constant - 1, trees)
fit<-lm(Volumn ~ Girth + Height + Constant - 1, trees)
fit<-lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2<-eliminate("Girth", trees)
head(trees2)
fit2<- lm(Volume ~ Height+Constant-1,trees2)
lapply(list(fit, fit2) ,coef)
all<-lm(Fertility~., swiss)
summary(all)
lm(Fertility~Agriculture, swiss)
summary(lm(Fertility~Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec = swiss$Examination + swiss$Catholic
ec <- swiss$Examination+swiss$Catholic
efit<-lm(Fertility~. + ec, swiss)
all$coeff - efit$coeff
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSpray, 15)
head(InsectSprays, 15)
E
InsectSprays$E
sB
summary(InsectSprays[,2])
sapply(InsectSprays, class)
fit<-count~spray, InsectSprays)
fit<-lm(count~spray, InsectSprays)
summaary(fit)$coef
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(InsectSprays[sA])
mean(InsectSprays[sA,])
mean(sA)
mean(sB)
nfit<-lm(count~spray-1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count~spray, spray2)
fit2 <- lm(counts~spray, spray2)
fit2<-lm(count~spray, spray2)
spray2
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
((fit$coef[2])-(fit$coef[3]))/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit<-lm(Numeric~Year, hunger)
summary(fit)$coef
lmF<-lm(Numeric~Year, hunger[hunger$Sex=="Female"])
lmF<-lm(Numeric~Year, hunger[hunger$Sex=="Female",])
lmF<-lm(Numeric~Year, hunger[hunger$Sex=="Female"], hunger)
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex!="Female"] ~ Year[Sex!="Female"],hunger)
lmBoth <- lm(Numeric~Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit<-lm(y~x, out2)
plot(fit, which=1)
fitno<-lm(y~x, out2[-1,])
plot(fitno, which=1)
coef(fitno)-coef(fit)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno<- out2[1,"y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(fit$residuals)
sigma <- sqrt( deviance(fit)/df.residual(fit))
rstd <- resid(fit)/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- df.
sigma1 <- df.()
sigma1 <- df
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1](sigma*sqrt(1-hatvalues(fit)[1]))
ok
()
x<-c(1)
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
predict(fitno, out2)-predict(fitno, out2)
dy <- predict(fitno, out2)-predict(fit, out2)
2*sigma^2
sum(dy^2)/(2*sigma^2)
cooks.distance(fit)[1]
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl <- fit(Fertility~., swiss)
mdl <- lm(Fertility~., swiss)
vif(mdl)
mdl2 <- lm(Fertility~Agriculture+Education+Catholic+Infant.Mortality, swiss)
vif(mdl2)
simbias()
x1c <- simbias()
apply(x1c, 1, mean)
fit1<-lm(Fertility~Agriculture, swiss)
fit3<-lm(Fertility~Agriculture+Examination+Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d<-deviance(fit3)/43
n<-deviance(fit1)-deviance(fit3)
n<-(deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.text(fit3$residuals)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl<-glm(ravenWinNum ~ ravenScore, family="binnomial", ravendata)
mdl<-glm(ravenWinNum ~ ravenScore, family="binomial", ravendata)
mdl<-glm(ravenWinNum ~ ravenScore, family="binomial", ravenData)
lodds<-predict(mdl, data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 49))
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[.'visits'])
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpoid(.95, lambda)
qpois(.95, lambda)
mdl2 <- glm(visits~date, family="poission", offset=log(visits+1))
OK
mdl2<-fit()
mdl2<-lm(1~0)
mdl2 <- glm(simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
summary(mdl2)
qpois(.95, mdl2$fitted.values[704])
