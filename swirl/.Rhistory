ymd("192012")
ymd("//192012")
mdy("1/9/2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hmd("03:22:14")
hms("03:22:14")
dt2
ymd(dt2)
update(this_mment, hours=8, minutes=34, seconds=55)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment() <- now()
this_moment <- now()
this_moment <- update(this_moment, hours=10, minutes=16, seconds=0)
this_moment
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours=17, minutes=34, seconds=00)
depart <- update(depart, hours=17, minutes=34)
depart
depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(swirl)
rm(list=ls())
install_from_swirl("Statistical Inference")
swirl()
(1-3/36)
deck
1/52
52
4/52
0
(3+3+3+3)/52
2/51
1/2*1.6*.8
64%
.64
mypdf
integrate(mypdf, 0, 1.6)
.25
info()
sqrt(2)
.997*.001
.985*(1-.001)
(1-.985)*(1-.001)
(.997*.001)/((.997*.001)*(1-.985)*(1-.001))
(.997*.001)/( (.997*.001)+(1-.985)*(1-.001) )
(1+2+3+4+5+6)/6
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
smeans
mean(smeans)
dice_sqr
ex2_fair <- (dice_sqr * dice_fair)^2
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5
ex2_fair - 3.5^2
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000, 1000), 1, mean))
)
sd(apply(matrix(rnorm(10000), 1000), 1, mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(1000, runif(100)))
info()
bye
bye()
swirl()
sd(apply(matrix(runif(10000),1000),1,mean))'
''
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)*.8^3 * (1-.8)^(5-3)
choose(5,3)*.8^3 * (1-.8)^(5-3)+choose(5,2)*.8^2 * (1-.8)^(5-2)+choose(5,1)*.8^1 * (1-.8)^(5-1)
(choose(5,3)*.8^3 * (.2)^(5-3))+(choose(5,2)*.8^2 * (.2)^(5-2))+(choose(5,1)*.8^1 * (.2)^(5-1))
( choose(5,1)*(.8)^1*(.2)(5-1) ) + ( choose(5,2)*(.8)^2*(.2)(5-2) ) + ( choose(5,3)*(.8)^3*(.2)(5-3) )
( choose(5,1)*(.8)^1*(.2)(5-1) )  + ( choose(5,2)*(.8)^2*(.2)(5-2) ) + ( choose(5,3)*(.8)^3*(.2)(5-3) )
( choose(5,1)*(.8)*.2(5-1) )
( choose(5,1)*(.8)*.2(5-1) ) )
choose(5,1)*(.8)*.2(5-1)
choose(5,1)*(.8)*.2*(5-1)
( choose(5,1)*(.8)^1*(.2)*(5-1) )  + ( choose(5,2)*(.8)^2*(.2)*(5-2) ) + ( choose(5,3)*(.8)^3*(.2)*(5-3) )
( choose(5,3)*(.8)^3*(.2)*(5-3) )  + ( choose(5,4)*(.8)^4*(.2)*(5-4) ) + ( choose(5,5)*(.8)^5*(.2)*(5-5) )
( choose(5,3)*(.8)^3*(.2)*(5-3) ) + ( choose(5,4)*(.8)^4*(.2)*(5-4) ) + ( choose(5,5)*(.8)^5*(.2)*(5-5) )
0.94208
?pbinom
pbinom(2, size=5, prob = .8, lower.tail=FALSE)
qnorm(prob=.1)
qnorm(.1)
0
qnorm(.975, mean=3, sd=2, lower.tail=TRUE)
1.96*2+3
pnorm(quantil=1200, mean=1020, sd=50, lower.tail=FALSE)
pnorm(quantile=1200, mean=1020, sd=50, lower.tail=FALSE)
?pnrom
pnorm(1200, mean=1020, sd=50, lower.tail=FALSE)
(1200-1020)/50
pnorm((1200-1020)/50)
pnorm((1200-1020)/50, lower.tail=FALSE)
qnorm(.75, mean=1020, sd=50, lower.tail=TRUE)
.53
ppois(3, mean=2.5*4)
ppois(3, 2.5*4)
?pbinom(.01, )
?pbinom(.01, 1000)
pbinom(.01, 1000)
pbinom(5, 1000, .01)
5/1000
ppois(5, lambda=5000)
ppois(5, .01*1000)
ppois(5, 1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
.6+c(-1,1)+qnorm(.975)*sqrt(.6*.4)/10
.6+c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.text(60, 100)$conf.int
binom.test(60, 100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s<-sd(difference)
mn+c(-1,1)*qt(.975, 9)*s/sqrt(10)
t.test(difference)$conf.int
sp <- 7*132.86^2+20*127.44^2
sp <- 7*15.34^2+20*18.23^2
ns <- 27
sp<-sqrt(sp/ns)
(132.86-127.44)+c(-1,1)+qt(.95)*sp/sqrt(ns+2)
(132.86-127.44)+c(-1,1)+qt(.95, ns)*sp/sqrt(ns+2)
132.86-127.44+c(-1,1)*qt(.975, ns)*sp*sqrt(1/8+1/21)
sqrt( var(g1)/10-var(g2)/10)
sqrt( 9*var(g1)/18 + 9*var(g2)/18)
sp <- sqrt( 9*var(g1)/18 + 9*var(g2)/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
mn+c(-1,1)+qt(.95, 18)*sp*sqrt(1/10+1/10)
mn+c(-1,1)*qt(.975, 18)*sp*sqrt(1/10+1/10)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2, g1, paired=FALSE, var.equal=TRUE)$conf
?t.test
t.test(g2, g1, paired=TRUE)$conf
num<- (15.32^2/8+18.23^2/21)^2
num<- (15.34^2/8+18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
127.44-132.86+c(-1,1)+qt(.975, mydf)*sqrt(15.34^2/8 + 18.23^2/21)
132.86-127.44+c(-1,1)+qt(.975, mydf)*sqrt(15.34^2/8 + 18.23^2/21)
132.86-127.44+c(-1,1)*qt(.975, mydf)*sqrt(15.34^2/8 + 18.23^2/21)
1
2
(32-30)/10/sqrt(16)
(32-30)/10/4
(32-30)/(10/sqrt(16))
15
qt(.95, 15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
pt(2.5, 15, lower.tail=FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2, lower.tail=FALSE)
mybin
pbinom(6,8,prob=.5, lower.tail=FALSE)
pbinom(7,8,prob=.5)
ppoit(9, lambda = 5, lower.tail=FALSE)
ppois(9, lambda = 5, lower.tail=FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(.95)
pnorm(30+z, mean=30, lower.tail=FALSE)
pnorm(30+z, mean=32, lower.tail=FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail=FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail=FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type =
| "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2 , sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8, n=26, sd=1)$delta
power.t.test(power=.8, n=26, sd=1, type="one.sample", alt="one.sided")$delta
power.t.test(power=.8, n=27, sd=1, type="one.sample", alt="one.sided")$delta
head(pValues,2)
head(pValues)
sum( pValues > .05 )
sum( pValues <.05)
padjust(pValues, method="bonferroni")
p.adjut(pValues, method="bonferroni")
p.adjust(pValues, method="bonferroni")
sum(p.adjust(pValues, method="bonferroni") < 0.05)
sum(p.adjust(pValues, method="BH") < 0.05)
tail(trueStatus)
table(pValues2<-.05, trueStatus)
table(pValues2<.05, trueStatus)
?
help
swirl()
table(pValues<.05, trueStatus)
pValues
pValues2
table(pValues2<.05, trueStatus)
24/500
table(p.adjust(pValues2, method="bonferroni")<.05, trueStatus)
table(p.adjust(pValues2, method="BH")<.05, trueStatus)
3.5
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace=TRUE)
resam <- matrix(sam, B, nh)
meds <- apple(resam 1, median)
meds <- apple(resam, 1, median)
meds <- apply(resam, 1, median)
median(meds) - median(fh)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(.025, .975))
quantile(meds, c(.025, .975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
gropu
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1 perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group))
)
mean(perms>obs)
testStat(DEcounts, group)
perms <- sapply(1: 10000, function(i) testStat(DEcounts, sample(group)))
rm(list=ls())
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4 ~ parent, galton)
)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$Child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes, varEst)
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/ (n-2) )
summary(fit)$sigma
deviance(fit)/(n-2)
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- sum(deviance(fit$residuals)^2)
sRes <- sum(deviance(sTot)^2)
)
()
""
sRes <- deviance(fit)
1-(rRes/sTot)
1-(sRes/sTot)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, calton$parent)
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm( child ~ ones + parent - 1, galton )
lm( child ~ parent, galton )
lm(child ~1, galton)
View(trees)
fit<-lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2<-lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm( Fertility ~ ., swiss)
lm(Fertility ~ ., swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examinatin, swiss$Education)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- sum(swiss$Examination, swiss$Catholic)
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility~. + ec, swiss)
all$coeff - efit$coeff
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays,15)
sX
sA
summary(InsectSprays[,2])
sapply(class, InsectSprays[,])
sapply(InsectSprays[,], class)
sapply(InsectSprays, class)
fit <- lm(count ~ spray, InsectSprays)
summry(fiT$coef)
summary(fit$coef)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric~Year)
fit <- lm(Numeric~Year, hunger)
summary(fit)$coef
lm(Numeric ~ x[hunger$Sex =="Female"] + Year, hunger)
)
lm(Numeric ~ Year, hunger)
lmF <- lm(hunger$Numeric[Hunger$Sex == "Female"] ~ hunger$Year[hunger$Sex == "Female"])
lmF <- lm(hunger$Numeric[hunger$Sex == "Female"] ~ hunger$Year[hunger$Sex == "Female"])
lmM <- lm(hunger$Numeric[hunger$Sex == "Male"] ~ hunger$Year[hunger$Sex == "Male"])
lmBOth <- lm(Numeric ~ Year + Sex, hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
swirl()
library(swirl)
swirl()
fit <- lm(y~x, out2)
?plot
plot(fit, which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which=1)
coef(fitno) - coef(fit)
coef(fit) - coef(fitno)
View(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno,out2[1,])
1-redif(fit)[1]/resno
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- fit$sigma
sigma <- sqrt(deviance(fit)/df.residual(fit))
resid(fit)/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1] / ( sigma1 * sqrt(1-hatvalues(fit)[1]))
rstudent(fit)[1]
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2) / (2*sigma^2)
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., data=swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data=swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, data=swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data=swiss)
anova(fit1, fit3)
deviance(fit3)
d<-deviance(fit3)/43
(deviance(fit1)-deviance(fit3))/()
(deviance(fit1)-deviance(fit3))
n <- (deviance(fit1) - deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.text(fit3$residuals)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, family="binomial", data=ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6))
)
axp(loodds)/(1+exp(lodds))
exp(loodds)/(1+exp(lodds))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(.95, 1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, data=hits, family="poisson"
)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[which.max(hits[,'visits']),]
hits[704,]
lambda <- mdl$fitted.values[704]
qpoid(.95, lambda)
qpois(.95, lambda)
mdl2 <- glm(visits ~ simplystats, offset=log(visits+1), data=hits)
mdl2 <- glm(formulat = simplystats ~ date, family="poisson", offset=log(visits+1), data=hits)
mdl2 <- glm(formula = simplystats ~ date, family="poisson", offset=log(visits+1), data=hits)
qpois(.95, mdl2fitted.values[704])
qpois(.95, mdl2$fitted.values[704])
library(rcharts)
install.packages("rcharts")
require(devtools)
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
require(devtools)
install_github('ramnathv/rCharts@dev')
install.packages("base64enc")
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
library(rMaps)
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
install.packages("rjson")
library(rMaps)
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
ichoropleth(Crime ~ State, data = subset(violent_crime, Year == 2010))
ichoropleth(Crime ~ State, data = violent_crime, animate = "Year")
ichoropleth(Crime ~ State, data = violent_crime, animate = "Year", play = TRUE)
